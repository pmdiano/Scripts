#!/bin/bash
# checkline: check if max line length exceeds a threshold

# Function max_line_of_file
#   Get the line with the maximum length of a file
# Input
#   $1: file name
#   $2: threshold of line length to echo the result
# Output
#   If longest line exceeds $2, the output the following:
#     <longest line length> <longest line number>
max_line_of_file () {
  max_line=
  max_len=0
  max_lineno=1
  if [[ -r $1 ]]; then
    lineno=1
    while IFS='' read -r line || [[ -n "$line" ]]; do
      len=$(echo "$line" | wc -c)
      if (( len > max_len )); then
        max_len=$len
        max_line=$line
        max_lineno=$lineno
      fi
      lineno=$((lineno + 1))
    done < "$1"
    if (( max_len > $2 )); then
      echo "@$max_lineno:$max_len"
    fi
  fi
}

print_info_done=
recursive=
threshold=80
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

print_info() {
  if [[ -z $print_info_done ]]; then
    printf "Start checking, threshold = $threshold, recursive = "
    if [[ -n $recursive ]]; then
      echo "true"
    else
      echo "false"
    fi
    print_info_done=1
  fi
}

check () {
  for i in "$1"/*; do
    if [[ -f $i ]]; then
      printf "checking $i..."
      res=$(max_line_of_file $i $threshold)
      if [[ -n $res ]]; then
        echo -e "${YELLOW}EXCEEDS: $res${NC}"
      else
        echo -e "${GREEN}OK${NC}"
      fi
    elif [[ -d $i ]]; then
      if [[ -z $recursive ]]; then
        echo "$i is a directory"
      else
        check "$i"
      fi
    fi
  done
}

while [[ -n $1 ]]; do
  case $1 in
    -t | --threshold)   shift
                        threshold=$1
                        ;;
    -r | --recursive)   recursive=1
                        ;;
    *)                  print_info
                        check $1
                        ;;
  esac
  shift
done
